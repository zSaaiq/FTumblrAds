//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "FlurryAdActor.h"

#import "IFlurryConsentObserver-Protocol.h"

@class NSDictionary, NSMutableArray, NSObject, NSString;
@protocol FlurryAdConsentCacheDelegate, OS_dispatch_queue;

@interface FlurryAdConsentCore : FlurryAdActor <IFlurryConsentObserver>
{
    _Bool _inGDPRScope;
    _Bool _legitContractInterestNecessity;
    _Bool _validInput;
    _Bool _maskAdRequest;
    _Bool _gdprRequestWaiting;
    NSDictionary *_consentStrings;
    NSString *_sessionID;
    id <FlurryAdConsentCacheDelegate> _cacheDelegate;
    NSMutableArray *_completionBlocks;
    NSObject<OS_dispatch_queue> *_flurryAdCacheCallbackQueue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *flurryAdCacheCallbackQueue; // @synthesize flurryAdCacheCallbackQueue=_flurryAdCacheCallbackQueue;
@property(nonatomic) _Bool gdprRequestWaiting; // @synthesize gdprRequestWaiting=_gdprRequestWaiting;
@property(retain, nonatomic) NSMutableArray *completionBlocks; // @synthesize completionBlocks=_completionBlocks;
@property(nonatomic) __weak id <FlurryAdConsentCacheDelegate> cacheDelegate; // @synthesize cacheDelegate=_cacheDelegate;
@property(retain, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
@property(nonatomic) _Bool maskAdRequest; // @synthesize maskAdRequest=_maskAdRequest;
@property(nonatomic) _Bool validInput; // @synthesize validInput=_validInput;
@property(nonatomic) _Bool legitContractInterestNecessity; // @synthesize legitContractInterestNecessity=_legitContractInterestNecessity;
@property(retain, nonatomic) NSDictionary *consentStrings; // @synthesize consentStrings=_consentStrings;
@property(nonatomic) _Bool inGDPRScope; // @synthesize inGDPRScope=_inGDPRScope;
- (void).cxx_destruct;
- (void)consentUpdated;
- (void)setDelegate:(id)arg1 withCallBackQueue:(id)arg2;
- (void)doGeoCheckWithResult:(CDUnknownBlockType)arg1;
- (id)getConsentAdRequestData;
- (id)block_getConsentStrings;
- (_Bool)isInputValid;
- (id)initWithConsent:(id)arg1;

@end

