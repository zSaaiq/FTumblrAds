//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import "TMAvatarViewProtocol-Protocol.h"

@class NSData, NSString, NSURL, UIImageView, _TtC8TumblrUI11TMImageView;
@protocol TMImageViewDelegate;

@interface TMAvatarView : UIView <TMAvatarViewProtocol>
{
    _Bool _showsPrivateBlogBadge;
    _Bool _anonymous;
    _Bool _private;
    _Bool _inaccessiblePrivateBlog;
    _Bool _checkPrivateAvatarHealth;
    _Bool _didRetry;
    _Bool _isNSFW;
    double _imageCornerRadius;
    NSString *_blogName;
    _TtC8TumblrUI11TMImageView *_containedImageView;
    UIImageView *_privateBadge;
    UIView *_onlineStatusBadge;
    long long _avatarShape;
}

- (void).cxx_destruct;
@property(nonatomic) long long avatarShape; // @synthesize avatarShape=_avatarShape;
@property(retain, nonatomic) UIView *onlineStatusBadge; // @synthesize onlineStatusBadge=_onlineStatusBadge;
@property(nonatomic) _Bool isNSFW; // @synthesize isNSFW=_isNSFW;
@property(nonatomic) _Bool didRetry; // @synthesize didRetry=_didRetry;
@property(nonatomic, getter=shouldCheckPrivateAvatarHealth) _Bool checkPrivateAvatarHealth; // @synthesize checkPrivateAvatarHealth=_checkPrivateAvatarHealth;
@property(retain, nonatomic) UIImageView *privateBadge; // @synthesize privateBadge=_privateBadge;
@property(retain, nonatomic) _TtC8TumblrUI11TMImageView *containedImageView; // @synthesize containedImageView=_containedImageView;
@property(nonatomic, getter=isInaccessiblePrivateBlog) _Bool inaccessiblePrivateBlog; // @synthesize inaccessiblePrivateBlog=_inaccessiblePrivateBlog;
@property(copy, nonatomic) NSString *blogName; // @synthesize blogName=_blogName;
@property(readonly, nonatomic, getter=isPrivate) _Bool private; // @synthesize private=_private;
@property(nonatomic, getter=isAnonymous) _Bool anonymous; // @synthesize anonymous=_anonymous;
@property(nonatomic) double imageCornerRadius; // @synthesize imageCornerRadius=_imageCornerRadius;
@property(nonatomic) _Bool showsPrivateBlogBadge; // @synthesize showsPrivateBlogBadge=_showsPrivateBlogBadge;
@property(retain, nonatomic) id <TMImageViewDelegate> delegate;
- (void)displayImage:(id)arg1;
- (void)loadImageFromURL:(id)arg1 useOAuth:(_Bool)arg2;
- (void)loadImageFromURL:(id)arg1;
- (void)clearAvatar;
@property(nonatomic) _Bool fadesIn;
- (void)setAvatarShape:(long long)arg1 defaultCorner:(double)arg2;
- (void)loadAvatarImageFromURLString:(id)arg1;
- (void)setAvatarImage:(id)arg1 privateBlog:(_Bool)arg2 force:(_Bool)arg3 isNSFW:(_Bool)arg4 pixelateBecauseBlockedByUser:(_Bool)arg5 avatarShape:(long long)arg6;
- (void)setAvatar:(id)arg1 privateBlog:(_Bool)arg2 force:(_Bool)arg3 isNSFW:(_Bool)arg4 pixelateBecauseBlockedByUser:(_Bool)arg5 avatarShape:(long long)arg6;
- (void)setBlogName:(id)arg1 privateBlog:(_Bool)arg2 force:(_Bool)arg3 isNSFW:(_Bool)arg4 pixelateBecauseBlockedByUser:(_Bool)arg5 avatarShape:(long long)arg6;
- (void)setBlogName:(id)arg1 privateBlog:(_Bool)arg2 force:(_Bool)arg3 isNSFW:(_Bool)arg4 avatarShape:(long long)arg5;
@property(readonly, nonatomic) NSURL *imageURL;
@property(readonly, nonatomic) NSData *cachedImageData;
- (void)setContentMode:(long long)arg1;
- (void)setBlogName:(id)arg1 privateBlog:(_Bool)arg2 force:(_Bool)arg3 isNSFW:(_Bool)arg4 pixelateBecauseBlockedByUser:(_Bool)arg5;
- (void)setBlogName:(id)arg1 privateBlog:(_Bool)arg2;
- (void)setBlogName:(id)arg1 privateBlog:(_Bool)arg2 force:(_Bool)arg3 isNSFW:(_Bool)arg4;
- (void)setBlog:(id)arg1;
- (void)anonymize;
- (void)willMoveToWindow:(id)arg1;
- (void)layoutSubviews;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)imageView;
- (void)applyURLString:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 avatarShape:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1 imageCornerRadius:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

