//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import "FlurryActionDelegate-Protocol.h"
#import "FlurryNativeTileViewControllerDelegate-Protocol.h"
#import "IFlurryAdNetworkConnector-Protocol.h"
#import "IFlurryAdReporting-Protocol.h"
#import "IFlurryAdVideoPlayerConnector-Protocol.h"
#import "IFlurryAdWebViewLoaderConnector-Protocol.h"
#import "IFlurryEventControllerHandler-Protocol.h"
#import "IFlurryTrackingManagerDelegate-Protocol.h"
#import "SKStoreProductViewControllerDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"

@class FlurryAdFrame, FlurryAdManager, FlurryAdNetworkBasePlugin, FlurryAdViewState, FlurryAdWebViewLoader, FlurryCachedAsset, FlurryVideoPlayer, NSDictionary, NSMutableArray, NSString, NSTimer, NSURL, UIActivityIndicatorView, UITextView, UIViewController, UIWebView;

@interface FlurryAd : UIView <IFlurryAdReporting, SKStoreProductViewControllerDelegate, IFlurryAdNetworkConnector, IFlurryAdWebViewLoaderConnector, IFlurryAdVideoPlayerConnector, IFlurryEventControllerHandler, UIWebViewDelegate, FlurryActionDelegate, FlurryNativeTileViewControllerDelegate, IFlurryTrackingManagerDelegate>
{
    UIView *_parentView;
    NSString *_space;
    NSMutableArray *_activeAdUnitsList;
    NSString *_webViewGuid;
    NSString *_currentOrientation;
    FlurryAdFrame *_adFrame;
    FlurryVideoPlayer *_videoPlayer;
    FlurryAdNetworkBasePlugin *_networkPlugin;
    UIView *_loadingView;
    UIActivityIndicatorView *_spinner;
    UITextView *_loadingTextView;
    NSDictionary *_nextAdFrameWithDelayParams;
    _Bool _refreshTimerPaused;
    long long _notificationFlag;
    _Bool _webViewPrepared;
    _Bool _readyForDisplay;
    _Bool _displayWhenReady;
    _Bool _adRendered;
    long long _initialOrientation;
    _Bool _isLoadingAdComponents;
    _Bool _appStoreInvoked;
    _Bool _activelyRespondingToAction;
    _Bool _invalidated;
    _Bool _isAudioOn;
    _Bool _isFullScreen;
    int _clickActionState;
    float _adPercentVisible;
    int _audioOnAndFullViewInMilliSecs;
    float _videoLastPositionInSecs;
    UIViewController *_parentViewController;
    FlurryAdViewState *_adViewState;
    FlurryAdWebViewLoader *_webViewLoader;
    NSTimer *_loadingViewTimer;
    NSURL *_itunesURL;
    FlurryCachedAsset *_cachedAsset;
    UIViewController *_presentingViewController;
    FlurryAdManager *_adManager;
    NSString *_videoPlayTrackingTag;
    NSString *_adPercentTrackingTag;
    NSString *_genericTrackingTag;
    NSString *_partialTrackingTag;
    FlurryAdWebViewLoader *_previousWebViewLoader;
    CDUnknownBlockType _skAppStoreLoadDidFinishBlock;
}

+ (int)getAdType:(id)arg1;
+ (_Bool)isAdTypeBanner:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType skAppStoreLoadDidFinishBlock; // @synthesize skAppStoreLoadDidFinishBlock=_skAppStoreLoadDidFinishBlock;
@property(retain, nonatomic) FlurryAdWebViewLoader *previousWebViewLoader; // @synthesize previousWebViewLoader=_previousWebViewLoader;
@property(retain, nonatomic) NSString *partialTrackingTag; // @synthesize partialTrackingTag=_partialTrackingTag;
@property(retain, nonatomic) NSString *genericTrackingTag; // @synthesize genericTrackingTag=_genericTrackingTag;
@property(retain, nonatomic) NSString *adPercentTrackingTag; // @synthesize adPercentTrackingTag=_adPercentTrackingTag;
@property(retain, nonatomic) NSString *videoPlayTrackingTag; // @synthesize videoPlayTrackingTag=_videoPlayTrackingTag;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(nonatomic) float videoLastPositionInSecs; // @synthesize videoLastPositionInSecs=_videoLastPositionInSecs;
@property(nonatomic) int audioOnAndFullViewInMilliSecs; // @synthesize audioOnAndFullViewInMilliSecs=_audioOnAndFullViewInMilliSecs;
@property(nonatomic) _Bool isAudioOn; // @synthesize isAudioOn=_isAudioOn;
@property(nonatomic) float adPercentVisible; // @synthesize adPercentVisible=_adPercentVisible;
@property(nonatomic) int clickActionState; // @synthesize clickActionState=_clickActionState;
@property(nonatomic) _Bool invalidated; // @synthesize invalidated=_invalidated;
@property(nonatomic) __weak FlurryAdManager *adManager; // @synthesize adManager=_adManager;
@property __weak UIViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
@property(nonatomic) _Bool activelyRespondingToAction; // @synthesize activelyRespondingToAction=_activelyRespondingToAction;
@property(nonatomic) _Bool appStoreInvoked; // @synthesize appStoreInvoked=_appStoreInvoked;
@property(retain, nonatomic) FlurryCachedAsset *cachedAsset; // @synthesize cachedAsset=_cachedAsset;
@property(retain, nonatomic) NSURL *itunesURL; // @synthesize itunesURL=_itunesURL;
@property(retain, nonatomic) NSTimer *loadingViewTimer; // @synthesize loadingViewTimer=_loadingViewTimer;
@property(nonatomic) long long initialOrientation; // @synthesize initialOrientation=_initialOrientation;
@property(retain, nonatomic) FlurryAdWebViewLoader *webViewLoader; // @synthesize webViewLoader=_webViewLoader;
@property(nonatomic) _Bool isLoadingAdComponents; // @synthesize isLoadingAdComponents=_isLoadingAdComponents;
@property(nonatomic) long long notificationFlag; // @synthesize notificationFlag=_notificationFlag;
@property(nonatomic) _Bool adRendered; // @synthesize adRendered=_adRendered;
@property _Bool displayWhenReady; // @synthesize displayWhenReady=_displayWhenReady;
@property _Bool readyForDisplay; // @synthesize readyForDisplay=_readyForDisplay;
@property(retain, nonatomic) NSMutableArray *activeAdUnitsList; // @synthesize activeAdUnitsList=_activeAdUnitsList;
@property(retain, nonatomic) FlurryAdViewState *adViewState; // @synthesize adViewState=_adViewState;
@property(retain, nonatomic) NSDictionary *nextAdFrameWithDelayParams; // @synthesize nextAdFrameWithDelayParams=_nextAdFrameWithDelayParams;
@property(nonatomic) _Bool refreshTimerPaused; // @synthesize refreshTimerPaused=_refreshTimerPaused;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UITextView *loadingTextView; // @synthesize loadingTextView=_loadingTextView;
@property(retain, nonatomic) UIView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) FlurryAdNetworkBasePlugin *networkPlugin; // @synthesize networkPlugin=_networkPlugin;
@property(retain, nonatomic) FlurryVideoPlayer *videoPlayer; // @synthesize videoPlayer=_videoPlayer;
@property(retain, nonatomic) FlurryAdFrame *adFrame; // @synthesize adFrame=_adFrame;
@property(retain, nonatomic) NSString *currentOrientation; // @synthesize currentOrientation=_currentOrientation;
@property(nonatomic) _Bool webViewPrepared; // @synthesize webViewPrepared=_webViewPrepared;
@property(retain, nonatomic) NSString *webviewGuid; // @synthesize webviewGuid=_webViewGuid;
@property(copy, nonatomic) NSString *space; // @synthesize space=_space;
@property(retain, nonatomic) UIView *parentView; // @synthesize parentView=_parentView;
@property(retain, nonatomic) UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
- (void).cxx_destruct;
- (void)nativeTileViewPageLoaded;
- (void)nativeTileViewIsClosing;
- (void)openSKAppstore:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)openUrlInAppInsideWebView:(id)arg1 inWebViewMode:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)nativeAdRemoveLoadingView;
@property(readonly, nonatomic) _Bool isReengagementAd;
- (void)videoPlaybackDidComplete;
- (void)resetVideoViewabilityRulesForState:(int)arg1;
- (void)processEvent:(id)arg1 withMacroDictionary:(id)arg2;
- (void)processEvent:(id)arg1 withMacroDictionary:(id)arg2 paramsDictionary:(id)arg3;
- (int)audioInfo;
- (id)getMacroDictionaryForRule:(id)arg1;
- (void)checkViewabilityEventWithPlaybackTime:(float)arg1;
- (void)reportSpaceWillLeaveApplication;
- (void)reportSpaceDidCollapse;
- (void)reportSpaceDidFailToExpandWithError:(id)arg1;
- (void)reportSpaceWillExpand;
- (void)reportSpaceWillCollapse;
- (void)reportClickFailedWithError:(id)arg1;
- (void)reportClick;
- (void)openSKAppstore:(id)arg1;
- (void)preLoadSKAppStore:(id)arg1;
- (void)desubscribeFromSKAppStoreFlurryNotifications;
- (void)subscribeToSKAppStoreFlurryNotifications;
- (void)skAppStoreDidFailToLoad;
- (void)skAppStoreDidLoad;
- (void)skAppStoreDidDismiss;
- (void)skAppStoreWillDismiss;
- (_Bool)viewIsNowVisibleForDuration:(double)arg1 forTag:(id)arg2;
- (void)viewDidFireImpression;
- (_Bool)viewNotVisiblePercentageValue:(float)arg1 forTag:(id)arg2;
- (_Bool)viewVisiblePercentageValue:(float)arg1 forTag:(id)arg2;
- (void)endTrackingForVideoPlay;
- (void)resumeSession;
- (void)adjustFrequencyCapping;
- (void)processAdWillClose;
- (void)applyProcessedParams:(id)arg1 forEvent:(id)arg2;
- (_Bool)processWebLoaderEvent:(id)arg1 paramsString:(id)arg2 params:(id)arg3;
- (_Bool)processMRAIDCloseEvent;
- (_Bool)activeFrameTakeover;
- (_Bool)isExpired;
- (id)allGuids;
- (_Bool)isGuidActive:(id)arg1;
- (_Bool)setActiveAdUnit:(id)arg1;
- (id)allAdUnitsList;
- (id)activeAdUnit;
- (id)appendAdUnits:(int)arg1 maximum:(int)arg2;
- (void)addAdUnit:(id)arg1;
- (void)alwaysSetFrame:(struct CGRect)arg1;
- (_Bool)processCollapseAction;
- (_Bool)processExpandAction:(id)arg1;
- (void)windowOnLoadCalledAction;
- (void)cleanPreviousView;
- (void)removeLoadingView;
- (void)showLoadingView;
- (void)removeTakeoverWindows;
- (void)blockMain_removeAd;
- (void)removeAd;
- (void)resumeFrame;
- (void)willMoveToSuperview:(id)arg1;
- (void)adjustAdFrame;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)openUrlInNativeBrowser:(id)arg1 params:(id)arg2;
- (void)videoDidNotFinish:(id)arg1;
- (void)videoDidFailToLoad:(id)arg1;
- (void)videoDidFinish:(id)arg1;
- (void)showAdAlert:(id)arg1;
- (void)reportCurrentViewStateToAdAsDefault;
- (void)reportCurrentViewStateToAdAsExpanded;
- (void)externalAdDidCloseForceDismissUI:(_Bool)arg1;
- (void)externalAdDidClose;
- (void)externalAdViewDidCloseDismissAd:(_Bool)arg1;
- (void)externalAdViewDidFailLoadWithError:(id)arg1;
- (void)externalAdViewDidFinishLoad;
- (void)linkNotProcessed:(id)arg1 forAdAction:(id)arg2;
- (void)linkProcessed:(id)arg1 forAdAction:(id)arg2 sendYCookies:(_Bool)arg3;
- (_Bool)openAppUrl:(id)arg1 fromExWebView:(_Bool)arg2;
- (void)openUrlInExternalWebView:(id)arg1;
- (void)checkAdLocation;
- (void)nextAdFrameWithDelay:(id)arg1;
- (void)loadAdFrameWithDelay:(id)arg1 frameOffset:(id)arg2;
- (void)reportAdClose;
- (void)reportPageLoadTime;
- (void)processClick;
- (_Bool)processRenderFailure:(id)arg1 sendReport:(_Bool)arg2;
- (_Bool)processAdNetworkErrorAfterAdRendered;
- (void)fireRenderedEvent;
- (void)processRendered;
- (_Bool)processVerificationFailure:(id)arg1;
- (void)renderVideoView;
- (void)prepareVideoView;
- (void)renderNetworkView;
- (void)prepareNetworkView;
- (void)renderWebView;
- (void)renderNonPreRenderedWebView;
- (void)renderPreRenderedWebview;
- (void)prepareWebView;
- (void)renderView;
- (void)prepareView;
- (_Bool)displayAdFrame:(id *)arg1;
@property(nonatomic) _Bool mraidAdLoaded; // @dynamic mraidAdLoaded;
- (_Bool)processRenderFailedError:(id)arg1;
- (void)processAdEvent:(int)arg1;
- (void)processWebViewFullLoadComplete;
- (_Bool)loadAdFrame:(id)arg1 error:(id *)arg2;
- (_Bool)loadNativeAdFrame:(id)arg1 error:(id *)arg2;
- (_Bool)prepareAdForDisplay:(id *)arg1;
@property(readonly, retain, nonatomic) UIWebView *webView;
- (void)reportCurrentViewStateToAd;
- (_Bool)isWebViewNewAdRequest:(_Bool)arg1;
- (void)notifyReadyForDisplay;
- (_Bool)disablePreRendering;
- (_Bool)canBeRefreshed;
- (void)updateToOrientationOnRotation;
- (void)handleHeartBeat;
- (_Bool)isShownModallyForViewController;
- (void)presentAlertViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (id)parentViewContainer;
- (id)parentViewContainersView;
- (void)updateViewContainer:(id)arg1;
- (id)initWithViewContainer:(id)arg1 adSpace:(id)arg2 adManager:(id)arg3;
- (void)invalidate;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isInView100HalfTime;
@property(nonatomic) _Bool isSponsoredAd;
@property(readonly) Class superclass;
@property(nonatomic) float timeInView100;
@property(nonatomic) float timeInView50;
@property(nonatomic) float timeInView50MaxContinuous;
@property(nonatomic) float timeInView50MaxContinuousLast;

@end

