//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "FlurryAdActor.h"

#import "FlurryContentLoadOperationDelegate-Protocol.h"

@class FlurryPreCachingDelegatesMapManager, NSDictionary, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString;
@protocol FlurryPreCachingDelegate;

@interface FlurryContentLoadingManager : FlurryAdActor <FlurryContentLoadOperationDelegate>
{
    _Bool firstTimeCopy;
    _Bool _sdkAssetUrlUpdated;
    int _cacheSize;
    int _maxAssetSize;
    NSString *_sdkAssetUrl;
    NSDictionary *_sdkAssetDictionary;
    NSMutableDictionary *_fileLoadOperations;
    NSOperationQueue *_fileLoadOperationsQueue;
    NSMutableDictionary *_httpLoadOperations;
    NSOperationQueue *_httpLoadOperationsQueue;
    FlurryPreCachingDelegatesMapManager *_precachingDelegatesMapManager;
    NSString *_cachesDirectoryPath;
    id <FlurryPreCachingDelegate> _delegate;
    NSMutableDictionary *_localAssetInfo;
    NSMutableSet *_primingUnits;
}

+ (id)sharedInstance;
+ (void)setup;
@property(retain, nonatomic) NSMutableSet *primingUnits; // @synthesize primingUnits=_primingUnits;
@property(retain, nonatomic) NSMutableDictionary *localAssetInfo; // @synthesize localAssetInfo=_localAssetInfo;
@property(nonatomic) __weak id <FlurryPreCachingDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *cachesDirectoryPath; // @synthesize cachesDirectoryPath=_cachesDirectoryPath;
@property(retain, nonatomic) FlurryPreCachingDelegatesMapManager *precachingDelegatesMapManager; // @synthesize precachingDelegatesMapManager=_precachingDelegatesMapManager;
@property(retain, nonatomic) NSOperationQueue *httpLoadOperationsQueue; // @synthesize httpLoadOperationsQueue=_httpLoadOperationsQueue;
@property(retain) NSMutableDictionary *httpLoadOperations; // @synthesize httpLoadOperations=_httpLoadOperations;
@property(retain, nonatomic) NSOperationQueue *fileLoadOperationsQueue; // @synthesize fileLoadOperationsQueue=_fileLoadOperationsQueue;
@property(retain, nonatomic) NSMutableDictionary *fileLoadOperations; // @synthesize fileLoadOperations=_fileLoadOperations;
@property(retain, nonatomic) NSDictionary *sdkAssetDictionary; // @synthesize sdkAssetDictionary=_sdkAssetDictionary;
@property _Bool sdkAssetUrlUpdated; // @synthesize sdkAssetUrlUpdated=_sdkAssetUrlUpdated;
@property(retain, nonatomic) NSString *sdkAssetUrl; // @synthesize sdkAssetUrl=_sdkAssetUrl;
@property(nonatomic) int maxAssetSize; // @synthesize maxAssetSize=_maxAssetSize;
@property(nonatomic) int cacheSize; // @synthesize cacheSize=_cacheSize;
- (void).cxx_destruct;
- (void)assetPreCachingCancelled:(id)arg1;
- (void)assetPreCachingFailed:(id)arg1;
- (void)assetPreCachingDone:(id)arg1;
- (void)deRegisterPreCachingDelegate:(id)arg1;
- (void)registerPreCachingDelegate:(id)arg1 assetURLPath:(id)arg2;
- (_Bool)block_isLoadPending:(id)arg1;
- (id)getResourceId:(id)arg1;
- (void)appWillResume:(id)arg1;
- (void)appWillBackground:(id)arg1;
- (void)appWillTerminate:(id)arg1;
- (unsigned long long)block_getFolderFileSize:(id)arg1;
- (_Bool)block_isCachedFilesSizeInLimits;
- (void)block_cancelAllLoads;
- (void)block_deleteAssetForPath:(id)arg1 withResourceId:(id)arg2;
- (void)removeCachedassetForPath:(id)arg1;
- (void)block_removeOldCachesDirectory;
- (void)block_removeCacheInProgressAssets;
- (void)block_removeExpiredAssets;
- (void)block_removeOldestAsset;
- (void)block_writeAssetInfoToDiskAtPath:(id)arg1;
- (void)block_writeAssetsInfoToDisk;
- (void)block_updateCBKeyForResource:(id)arg1 andCbKey:(id)arg2;
- (void)block_saveAssetCachingInfo:(id)arg1 withStatus:(id)arg2;
- (void)saveAssetCachingInfo:(id)arg1 withStatus:(id)arg2;
- (void)block_loadOperationDidCancel:(id)arg1;
- (void)loadOperationDidCancel:(id)arg1;
- (void)block_loadOperationDidFailLoading:(id)arg1;
- (void)loadOperationDidFailLoading:(id)arg1;
- (void)block_loadOperationDidFinishLoading:(id)arg1;
- (void)loadOperationDidFinishLoading:(id)arg1;
- (void)block_loadAsset:(id)arg1 withPath:(id)arg2 withExpiryTime:(double)arg3 withCBEmbedded:(_Bool)arg4 altCBKey:(id)arg5 withTags:(id)arg6 withAbsolutePath:(id)arg7 withRelativePath:(id)arg8 removalType:(id)arg9 forDelegate:(id)arg10;
- (void)loadAsset:(id)arg1 withPath:(id)arg2 withExpiryTime:(double)arg3 withCBEmbedded:(_Bool)arg4 altCBKey:(id)arg5 withTags:(id)arg6 withAbsolutePath:(id)arg7 withRelativePath:(id)arg8 removalType:(id)arg9 forDelegate:(id)arg10;
- (id)cachedTimeForAssetKey:(id)arg1;
- (id)relativeAssetPathForAssetType:(id)arg1 withResourceId:(id)arg2 andFile:(id)arg3;
- (id)block_getCachedAssetPaths:(id)arg1 withResourceId:(id)arg2 removalType:(id)arg3;
- (void)block_initiateDownloadStartForPath:(id)arg1 withResourceId:(id)arg2 withCBEmbedded:(_Bool)arg3 altCBKey:(id)arg4 withexpiryTime:(double)arg5 withTags:(id)arg6 withRemovalType:(id)arg7 withDelegate:(id)arg8;
- (void)initialize_downloadForPath:(id)arg1 withResourceId:(id)arg2 withCBEmbedded:(_Bool)arg3 altCBKey:(id)arg4 withexpiryTime:(double)arg5 withTags:(id)arg6 withDelegate:(id)arg7;
- (_Bool)block_checkConditionsForPath:(id)arg1;
- (id)cachedAssetForPath:(id)arg1 withexpiryTime:(double)arg2 withTags:(id)arg3 withDelegate:(id)arg4;
- (_Bool)block_isAssetPreCached:(id)arg1 withResourceId:(id)arg2 withCBEmbedded:(_Bool)arg3 withAltCBKey:(id)arg4 withFileRemovalType:(id)arg5;
- (void)areAssetsCached:(id)arg1 withResourceId:(id)arg2 withCBEmbedded:(_Bool)arg3 withAltCBKey:(id)arg4 withFileRemovalType:(id)arg5 forPreCaching:(_Bool)arg6 adUnit:(id)arg7 onQueue:(id)arg8 withNonCachedAssets:(CDUnknownBlockType)arg9;
- (_Bool)isAssetPreCached:(id)arg1 withResourceId:(id)arg2 withCBEmbedded:(_Bool)arg3 withAltCBKey:(id)arg4 withFileRemovalType:(id)arg5;
- (_Bool)block_addDownloadingAdUnit:(id)arg1;
- (void)removeReadyAdUnit:(id)arg1;
- (void)dealloc;
- (void)registerForNotifications;
- (void)setupLocalAssetInfo;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

