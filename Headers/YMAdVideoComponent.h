//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "YMAdControllerComponent.h"

#import "YMAdControllerEventReceiver-Protocol.h"
#import "YMAdVideoPlayerViewDelegate-Protocol.h"

@class NSSet, NSString, YMAdVideoConfig, YVideoViewState;

@interface YMAdVideoComponent : YMAdControllerComponent <YMAdVideoPlayerViewDelegate, YMAdControllerEventReceiver>
{
    _Bool _firstTimePlayed;
    _Bool _shouldPauseLeavingFullScreen;
    _Bool _autoplayEnabled;
    _Bool _isFullScreen;
    int _videoStatus;
    int _currentQuartile;
    NSString *_identifier;
    YMAdVideoConfig *_videoConfig;
    struct CGSize _playerSize;
}

+ (id)videoComponentForController:(id)arg1 videoConfig:(id)arg2 diagnostics:(id)arg3;
- (void).cxx_destruct;
@property(nonatomic) struct CGSize playerSize; // @synthesize playerSize=_playerSize;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(nonatomic) _Bool autoplayEnabled; // @synthesize autoplayEnabled=_autoplayEnabled;
@property(nonatomic) _Bool shouldPauseLeavingFullScreen; // @synthesize shouldPauseLeavingFullScreen=_shouldPauseLeavingFullScreen;
@property(nonatomic) int currentQuartile; // @synthesize currentQuartile=_currentQuartile;
@property(nonatomic) int videoStatus; // @synthesize videoStatus=_videoStatus;
@property(nonatomic) _Bool firstTimePlayed; // @synthesize firstTimePlayed=_firstTimePlayed;
@property(retain, nonatomic) YMAdVideoConfig *videoConfig; // @synthesize videoConfig=_videoConfig;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)applyAutoplaying:(_Bool)arg1 forPlayer:(id)arg2 viewStateChangedAnimated:(_Bool)arg3;
- (void)doDisableAutoplay:(id)arg1;
- (void)cancelPendingAutoplayDisables;
- (void)videoPlayerDisableAutoplay:(id)arg1;
- (void)videoPlayerEnableAutoplay:(id)arg1;
@property(readonly) double secondsOnScreenBeforeAutoplay;
- (_Bool)isMuted:(_Bool)arg1;
- (int)updateScreenInfo:(id)arg1;
- (void)videoPlayerDidLeaveScreen:(id)arg1;
- (void)videoPlayerWillEnterScreen:(id)arg1;
- (void)adControllerWillPerformAdClick:(id)arg1;
- (void)adController:(id)arg1 viewStateAnimationChangedFrom:(_Bool)arg2;
- (void)adController:(id)arg1 didChangeViewStateFrom:(int)arg2;
- (void)adController:(id)arg1 willBeAssignedNewView:(id)arg2;
- (void)reportVideoQuartile100Beacon;
- (void)videoPlayerWillShowWebviewEndCardForView:(id)arg1;
- (_Bool)videoPlayerEndCardWebViewShouldStartLoadWithRequest:(id)arg1;
- (_Bool)isBlackListed:(id)arg1;
- (void)handleAutoplayChangeWithOldAutoplayEnabled:(_Bool)arg1 newAutoplayEnabled:(_Bool)arg2 oldViewAnimating:(_Bool)arg3 newViewAnimating:(_Bool)arg4 oldViewState:(int)arg5 newViewState:(int)arg6 videoPlayerView:(id)arg7;
@property(retain, nonatomic) YVideoViewState *savedPlaybackState;
- (_Bool)videoPlayerDidStatusChangeForView:(id)arg1 status:(int)arg2;
- (id)presentingViewControllerForFullscreenVideo;
- (void)videoPlayer:(id)arg1 statusChangedTo:(int)arg2;
- (_Bool)shouldAutoplay;
@property(readonly) NSString *site;
- (void)videoPlayer:(id)arg1 didFailWithError:(id)arg2;
- (id)createPlayEventValueWithAutoplay:(_Bool)arg1 fullscreen:(_Bool)arg2;
- (id)createEventValueForQuartile:(int)arg1 fullscreen:(_Bool)arg2;
- (void)beaconQuartile:(int)arg1;
- (int)calculateQuartileForDuration:(float)arg1 andPosition:(float)arg2;
- (void)sendMonetizationBeaconsForAd:(id)arg1;
- (void)videoPlayer:(id)arg1 didChangeFullScreenMode:(_Bool)arg2;
- (void)videoPlayerDidTapCallToAction:(id)arg1;
- (void)videoPlayer:(id)arg1 didReplayVideo:(id)arg2 byUserClick:(_Bool)arg3 fullScreen:(_Bool)arg4;
- (void)videoPlayer:(id)arg1 didPlayTo:(float)arg2 duration:(float)arg3 fullscreen:(_Bool)arg4;
- (void)videoPlayer:(id)arg1 didStartVideo:(id)arg2 byUserClick:(_Bool)arg3 fullScreen:(_Bool)arg4;
@property(readonly) NSSet *tapRegionsForExpand;
- (id)initWithAdController:(id)arg1 videoConfig:(id)arg2 diagnostics:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

