//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SMAdView.h"

#import "UIScrollViewDelegate-Protocol.h"

@class CMMotionManager, NSArray, NSLayoutConstraint, NSString, UIButton, UIImage, UIImageView, UILabel, UIScrollView, UITapGestureRecognizer, UIView;

@interface SMAdPanoramaView : SMAdView <UIScrollViewDelegate>
{
    _Bool _isHorizontalScrolling;
    _Bool _isPhoneAnimationPlayed;
    UIView *_sponsoredMomentsAdFooterElementsView;
    UIView *_viewScrollIndicatorBackground;
    UIView *_viewScrollIndicator;
    UIImageView *_gradientOverlayImageView;
    UIImageView *_panoramaImgView;
    UIImageView *_phoneDeviceImageView;
    UIImageView *_leftArrowImageView;
    UIImageView *_rightArrowImageView;
    UILabel *_tapInstallLabel;
    UILabel *_phoneAnimationLabel;
    UIScrollView *_panoramaScrollView;
    UIImage *_panoramaImage;
    UIView *_hotSpotPopupContainer;
    UIButton *_hotSpotPopupImage;
    UITapGestureRecognizer *_hotspotGestureRecognizer;
    UITapGestureRecognizer *_panoramaImgTap;
    NSArray *_hotspotAssets;
    NSArray *_hotspotButtons;
    NSString *_backgroundImageBeacon;
    NSString *_backgroundImageURL;
    CMMotionManager *_motionManager;
    NSLayoutConstraint *_indicatorLeadingConstraints;
    long long _minimumXOffset;
    long long _maximumXOffset;
    double _smAdViewHeight;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isPhoneAnimationPlayed; // @synthesize isPhoneAnimationPlayed=_isPhoneAnimationPlayed;
@property(nonatomic) _Bool isHorizontalScrolling; // @synthesize isHorizontalScrolling=_isHorizontalScrolling;
@property(nonatomic) double smAdViewHeight; // @synthesize smAdViewHeight=_smAdViewHeight;
@property(nonatomic) long long maximumXOffset; // @synthesize maximumXOffset=_maximumXOffset;
@property(nonatomic) long long minimumXOffset; // @synthesize minimumXOffset=_minimumXOffset;
@property(retain, nonatomic) NSLayoutConstraint *indicatorLeadingConstraints; // @synthesize indicatorLeadingConstraints=_indicatorLeadingConstraints;
@property(retain, nonatomic) CMMotionManager *motionManager; // @synthesize motionManager=_motionManager;
@property(retain, nonatomic) NSString *backgroundImageURL; // @synthesize backgroundImageURL=_backgroundImageURL;
@property(retain, nonatomic) NSString *backgroundImageBeacon; // @synthesize backgroundImageBeacon=_backgroundImageBeacon;
@property(retain, nonatomic) NSArray *hotspotButtons; // @synthesize hotspotButtons=_hotspotButtons;
@property(retain, nonatomic) NSArray *hotspotAssets; // @synthesize hotspotAssets=_hotspotAssets;
@property(retain, nonatomic) UITapGestureRecognizer *panoramaImgTap; // @synthesize panoramaImgTap=_panoramaImgTap;
@property(retain, nonatomic) UITapGestureRecognizer *hotspotGestureRecognizer; // @synthesize hotspotGestureRecognizer=_hotspotGestureRecognizer;
@property(retain, nonatomic) UIButton *hotSpotPopupImage; // @synthesize hotSpotPopupImage=_hotSpotPopupImage;
@property(retain, nonatomic) UIView *hotSpotPopupContainer; // @synthesize hotSpotPopupContainer=_hotSpotPopupContainer;
@property(retain, nonatomic) UIImage *panoramaImage; // @synthesize panoramaImage=_panoramaImage;
@property(retain, nonatomic) UIScrollView *panoramaScrollView; // @synthesize panoramaScrollView=_panoramaScrollView;
@property(retain, nonatomic) UILabel *phoneAnimationLabel; // @synthesize phoneAnimationLabel=_phoneAnimationLabel;
@property(retain, nonatomic) UILabel *tapInstallLabel; // @synthesize tapInstallLabel=_tapInstallLabel;
@property(retain, nonatomic) UIImageView *rightArrowImageView; // @synthesize rightArrowImageView=_rightArrowImageView;
@property(retain, nonatomic) UIImageView *leftArrowImageView; // @synthesize leftArrowImageView=_leftArrowImageView;
@property(retain, nonatomic) UIImageView *phoneDeviceImageView; // @synthesize phoneDeviceImageView=_phoneDeviceImageView;
@property(retain, nonatomic) UIImageView *panoramaImgView; // @synthesize panoramaImgView=_panoramaImgView;
@property(retain, nonatomic) UIImageView *gradientOverlayImageView; // @synthesize gradientOverlayImageView=_gradientOverlayImageView;
@property(retain, nonatomic) UIView *viewScrollIndicator; // @synthesize viewScrollIndicator=_viewScrollIndicator;
@property(retain, nonatomic) UIView *viewScrollIndicatorBackground; // @synthesize viewScrollIndicatorBackground=_viewScrollIndicatorBackground;
@property(retain, nonatomic) UIView *sponsoredMomentsAdFooterElementsView; // @synthesize sponsoredMomentsAdFooterElementsView=_sponsoredMomentsAdFooterElementsView;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)cancelAnimation;
- (void)movePhoneImageRightWithStartTime:(double)arg1 andDuration:(double)arg2;
- (void)retainPhoneImageAtCenterWithStartTime:(double)arg1 andDuration:(double)arg2;
- (void)movePhoneImageCenterWithStartTime:(double)arg1 andDuration:(double)arg2;
- (void)movePhoneImageLeftWithStartTime:(double)arg1 andDuration:(double)arg2;
- (void)startPhoneAnimation;
- (void)panoramaImageTapped;
- (void)setHotspots;
- (void)resetHotpots;
- (void)shadowHotspotPopup;
- (id)setHotspotImageCloseButtonWithImageWidth:(double)arg1;
- (void)hotspotButtonClicked:(id)arg1;
- (void)hotspotImageTapped:(id)arg1;
- (void)enableHotspotButtons;
- (void)disableHotspotButtons;
- (void)parsePanoramaAssets;
- (void)instrumentAdView;
- (void)moveToOffset:(double)arg1 withAnimation:(_Bool)arg2;
- (void)enableMotion;
- (void)setPanoramaIndicator;
- (double)mainScreenHeight;
- (double)mainScreenWidth;
- (void)removeFromSuperview;
- (void)onSMAdViewTapped:(id)arg1;
- (void)buildScrollIndicator;
- (void)buildSponsoredMomentsAdElementsView;
- (void)buildViewHierarchy;
- (void)buildSponsoredMomentsAdFooterElementsView;
- (void)buildTapInstallLabel;
- (void)buildGradientOverlayImageView;
- (void)buildConstraints;
- (id)createAdView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

