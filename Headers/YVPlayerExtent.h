//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "YVProcessExtent.h"

#import "YVPlayerExtentStoreSessionContext-Protocol.h"

@class NSString, YVBoolNode, YVMeasure, YVProcessNode, YVResourceNode, YVSuppliedResource, YVideoView;

@interface YVPlayerExtent : YVProcessExtent <YVPlayerExtentStoreSessionContext>
{
    YVSuppliedResource *_resolvedMuted;
    YVMeasure *_muteAction;
    YVMeasure *_unmuteAction;
    YVBoolNode *_preferredMute;
    YVBoolNode *_playerTryingToPlay;
    YVResourceNode *_activeContainer;
    YVideoView *_videoView;
    YVResourceNode *_windowState;
    YVMeasure *_fullscreenFriendlyObstructionViews;
    YVResourceNode *_externalFriendlyObstructionViews;
    YVResourceNode *_friendlyObstructionViews;
    YVMeasure *_allContainers;
    YVMeasure *_lastActivatedContainer;
    YVProcessNode *_chromeMuteProc;
    YVSuppliedResource *_chromeMute;
    YVSuppliedResource *_chromeUnmute;
    YVResourceNode *_rewiring;
    YVMeasure *_windowStateChanged;
    YVMeasure *_registerFriendlyObstructionView;
    YVMeasure *_unregisterFriendlyObstructionView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) YVMeasure *unregisterFriendlyObstructionView; // @synthesize unregisterFriendlyObstructionView=_unregisterFriendlyObstructionView;
@property(retain, nonatomic) YVMeasure *registerFriendlyObstructionView; // @synthesize registerFriendlyObstructionView=_registerFriendlyObstructionView;
@property(retain, nonatomic) YVMeasure *windowStateChanged; // @synthesize windowStateChanged=_windowStateChanged;
@property(retain, nonatomic) YVResourceNode *rewiring; // @synthesize rewiring=_rewiring;
@property(retain, nonatomic) YVSuppliedResource *chromeUnmute; // @synthesize chromeUnmute=_chromeUnmute;
@property(retain, nonatomic) YVSuppliedResource *chromeMute; // @synthesize chromeMute=_chromeMute;
@property(retain, nonatomic) YVProcessNode *chromeMuteProc; // @synthesize chromeMuteProc=_chromeMuteProc;
@property(retain, nonatomic) YVMeasure *lastActivatedContainer; // @synthesize lastActivatedContainer=_lastActivatedContainer;
@property(retain, nonatomic) YVMeasure *allContainers; // @synthesize allContainers=_allContainers;
@property(readonly, nonatomic) YVResourceNode *friendlyObstructionViews; // @synthesize friendlyObstructionViews=_friendlyObstructionViews;
@property(readonly, nonatomic) YVResourceNode *externalFriendlyObstructionViews; // @synthesize externalFriendlyObstructionViews=_externalFriendlyObstructionViews;
@property(readonly, nonatomic) YVMeasure *fullscreenFriendlyObstructionViews; // @synthesize fullscreenFriendlyObstructionViews=_fullscreenFriendlyObstructionViews;
@property(readonly, nonatomic) YVResourceNode *windowState; // @synthesize windowState=_windowState;
@property(readonly, nonatomic) __weak YVideoView *videoView; // @synthesize videoView=_videoView;
@property(readonly, nonatomic) YVResourceNode *activeContainer; // @synthesize activeContainer=_activeContainer;
@property(readonly, nonatomic) YVBoolNode *playerTryingToPlay; // @synthesize playerTryingToPlay=_playerTryingToPlay;
@property(readonly, nonatomic) YVBoolNode *preferredMute; // @synthesize preferredMute=_preferredMute;
@property(readonly, nonatomic) YVMeasure *unmuteAction; // @synthesize unmuteAction=_unmuteAction;
@property(readonly, nonatomic) YVMeasure *muteAction; // @synthesize muteAction=_muteAction;
@property(readonly, nonatomic) YVSuppliedResource *resolvedMuted; // @synthesize resolvedMuted=_resolvedMuted;
- (void)setFullscreenFriendlyObstructionViews:(id)arg1;
- (void)unregisterFriendlyObstructionView:(id)arg1;
- (void)registerFriendlyObstructionView:(id)arg1;
- (void)windowStateUpdated:(long long)arg1;
- (void)containerActivated:(id)arg1;
- (void)removeContainer:(id)arg1;
- (id)createContainer:(id)arg1;
- (void)unmute;
- (void)mute;
@property(readonly, nonatomic) _Bool isMuted;
- (id)initWithGraph:(id)arg1 videoView:(id)arg2;
- (id)initWithGraph:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

