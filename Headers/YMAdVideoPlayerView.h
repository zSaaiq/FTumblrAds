//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import "YMAdExtendedVideoViewControllerDelegate-Protocol.h"
#import "YMAdVideoPlayerControlsDelegate-Protocol.h"
#import "YMAdVideoViewManagerDelegate-Protocol.h"
#import "YVideoViewDelegate-Protocol.h"

@class NSNumber, NSString, YMAd, YMAdExtendedVideoViewController, YMAdVideoViewManager, YMAdView;
@protocol YMAdVideoPlayerViewDelegate;

@interface YMAdVideoPlayerView : UIView <YVideoViewDelegate, YMAdVideoViewManagerDelegate, YMAdExtendedVideoViewControllerDelegate, YMAdVideoPlayerControlsDelegate>
{
    _Bool _isSplitViewEnabled;
    YMAdView *_ownerView;
    UIView *_videoPlaceholderView;
    NSNumber *_videoViewCount;
    YMAdVideoViewManager *_videoViewManager;
    YMAdExtendedVideoViewController *_extendedVideoView;
    struct CGSize _playerSize;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isSplitViewEnabled; // @synthesize isSplitViewEnabled=_isSplitViewEnabled;
@property(retain, nonatomic) YMAdExtendedVideoViewController *extendedVideoView; // @synthesize extendedVideoView=_extendedVideoView;
@property(retain, nonatomic) YMAdVideoViewManager *videoViewManager; // @synthesize videoViewManager=_videoViewManager;
@property(copy, nonatomic) NSNumber *videoViewCount; // @synthesize videoViewCount=_videoViewCount;
@property(nonatomic) __weak UIView *videoPlaceholderView; // @synthesize videoPlaceholderView=_videoPlaceholderView;
@property(nonatomic) __weak YMAdView *ownerView; // @synthesize ownerView=_ownerView;
@property(readonly) struct CGSize playerSize; // @synthesize playerSize=_playerSize;
- (void)play;
- (_Bool)shouldAutoplay;
- (void)setUnmuted:(_Bool)arg1;
- (void)ymadViewExpandButtonTapped;
- (void)extendedVideoViewControllerDidFinish:(CDUnknownBlockType)arg1;
- (int)convertVideoEnumToYMAd:(long long)arg1;
- (void)updateSettingsForFullScreen:(id)arg1;
- (void)playbackProgressDidUpdate:(id)arg1;
- (_Bool)videoPlayer:(id)arg1 shouldRespondToUserInteraction:(long long)arg2;
- (void)videoPlayer:(id)arg1 playbackStatusChanged:(long long)arg2 userInfo:(id)arg3;
- (void)videoPlayer:(id)arg1 playbackPositionChanged:(double)arg2;
- (id)customErrorVideoOverlayForVideoPlayer:(id)arg1;
- (id)customCompletedVideoOverlayForVideoPlayer:(id)arg1;
- (void)videoPlayer:(id)arg1 didChangeWindowStateTo:(long long)arg2 from:(long long)arg3;
- (void)videoPlayer:(id)arg1 willChangeWindowStateTo:(long long)arg2 from:(long long)arg3;
- (_Bool)verifyIsFullscreen;
- (_Bool)isInFullScreen;
- (void)playVideoView:(id)arg1 byUser:(_Bool)arg2 byForcePlay:(_Bool)arg3 allowRestart:(_Bool)arg4;
- (void)playAllowingRestart:(_Bool)arg1 forcePlay:(_Bool)arg2 byUser:(_Bool)arg3;
- (void)pause;
- (void)playAllowingRestart:(_Bool)arg1 forcePlay:(_Bool)arg2;
- (void)playAllowingRestart:(_Bool)arg1;
- (void)videoViewManager:(id)arg1 videoPlayerWebViewDidFailLoadWithError:(id)arg2;
- (_Bool)videoViewManager:(id)arg1 videoPlayerEndCardWebViewShouldStartLoadWithRequest:(id)arg2;
- (void)videoViewManager:(id)arg1 errorOverlayTapped:(id)arg2;
- (void)videoViewManager:(id)arg1 callToActionButtonTapped:(id)arg2;
- (void)videoViewManager:(id)arg1 replayButtonTapped:(id)arg2;
- (void)videoViewManager:(id)arg1 endStateOverlayTapped:(id)arg2;
- (_Bool)getVideoViewMutedState;
- (void)doUnprepare;
- (void)prepareForUnshow;
- (void)doPrepareForShow;
- (void)prepareForShow;
- (void)updateEndStateScreenButtons;
- (void)updateWithOwner:(id)arg1;
- (void)awakeFromNib;
- (_Bool)shouldShowAudioOverlay;
- (_Bool)notCompletedNorError;
- (_Bool)isTileVideoAd;
- (_Bool)isSponsoredVideoAd;
- (_Bool)isCarouselVideoAd;
- (_Bool)isAutoloopAd;
- (id)endWebViewOverlay;
- (id)endScreenOverlay;
- (id)videoErrorScreenOverlay;
- (id)videoView;
@property(readonly, nonatomic) __weak id <YMAdVideoPlayerViewDelegate> delegate;
@property(readonly, nonatomic) YMAd *ad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

