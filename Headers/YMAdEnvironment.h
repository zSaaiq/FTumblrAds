//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "YMAdEnvironment-Protocol.h"

@class CLLocation, CTTelephonyNetworkInfo, NSArray, NSCondition, NSString, YMAdReachability;
@protocol YMAdConnectivityListener;

@interface YMAdEnvironment : NSObject <YMAdEnvironment>
{
    NSCondition *_initCondition;
    _Bool _initCompleted;
    _Bool _useNativeBrowser;
    NSArray *_bucketIDs;
    NSArray *_sdkVersioning;
    YMAdReachability *_reachability;
    long long _networkStatus;
    id <YMAdConnectivityListener> _connectivityListener;
    NSString *__appBundleId;
    NSString *__appBundleVersion;
    NSString *__effectiveLanguage;
    CTTelephonyNetworkInfo *_networkInfo;
    id _foregroundNotificationListener;
    id _reachabilityListener;
}

+ (id)sharedInstance;
+ (id)ipAsString:(const struct sockaddr_in *)arg1;
+ (id)readIpAddresses;
- (void).cxx_destruct;
@property(retain) id reachabilityListener; // @synthesize reachabilityListener=_reachabilityListener;
@property(retain) id foregroundNotificationListener; // @synthesize foregroundNotificationListener=_foregroundNotificationListener;
@property(retain) CTTelephonyNetworkInfo *networkInfo; // @synthesize networkInfo=_networkInfo;
@property(retain) NSString *_effectiveLanguage; // @synthesize _effectiveLanguage=__effectiveLanguage;
@property(retain) NSString *_appBundleVersion; // @synthesize _appBundleVersion=__appBundleVersion;
@property(retain) NSString *_appBundleId; // @synthesize _appBundleId=__appBundleId;
@property(retain) id <YMAdConnectivityListener> connectivityListener; // @synthesize connectivityListener=_connectivityListener;
@property long long networkStatus; // @synthesize networkStatus=_networkStatus;
@property(retain) YMAdReachability *reachability; // @synthesize reachability=_reachability;
@property _Bool useNativeBrowser; // @synthesize useNativeBrowser=_useNativeBrowser;
@property(retain) NSArray *sdkVersioning; // @synthesize sdkVersioning=_sdkVersioning;
@property(copy) NSArray *bucketIDs; // @synthesize bucketIDs=_bucketIDs;
- (void)readBucketIDs;
@property(readonly, nonatomic) NSString *bucketIDForServer;
@property(readonly, nonatomic) NSArray *experimentBuckets;
@property(readonly, nonatomic) _Bool isYConfigIntegated;
- (_Bool)isOsVersionAtLeast:(CDStruct_f6aba300)arg1;
- (int)getConnectionType;
- (void)setupConnectivityListener:(id)arg1;
- (void)connectivityDidChange:(id)arg1;
@property(readonly, nonatomic) _Bool retinaDisplay;
@property(readonly, nonatomic) CLLocation *opportunisticLocation;
@property(readonly, nonatomic) struct CGSize screenSize;
@property(readonly, nonatomic) int viewSizeClass;
@property(readonly, nonatomic) double screenHeight;
@property(readonly, nonatomic) double screenWidth;
@property(readonly, nonatomic) NSString *dataNetwork;
@property(readonly, nonatomic) _Bool isWIFI;
@property(readonly, nonatomic) NSString *effectiveLanguage;
@property(readonly, nonatomic) NSString *localeIdentifier;
@property(readonly, nonatomic) NSString *mobileNetworkCode;
@property(readonly, nonatomic) NSString *mobileCountryCode;
@property(readonly, nonatomic) NSString *publicIpForDemo;
@property(readonly, nonatomic) NSString *ipAddress;
- (_Bool)hasCellularNetwork;
@property(readonly, nonatomic) int formFactor;
@property(readonly, nonatomic) NSString *deviceModelRaw;
@property(readonly, nonatomic) NSString *deviceModel;
@property(readonly, copy) NSArray *osVersionComponents;
@property(readonly, nonatomic) NSString *osVersion;
@property(readonly, nonatomic) NSString *osType;
@property(readonly, nonatomic) NSString *sdkVersionString;
@property(readonly, nonatomic) NSArray *sdkVersion;
@property(readonly, nonatomic) NSString *sdkName;
@property(readonly, nonatomic) NSString *appBundleVersion;
- (void)waitUntilInitCompleted;
@property(readonly, nonatomic) NSString *appBundleId;
- (void)readEffectiveLanguage;
- (void)readBundleInfo;
- (void)onAppForeground;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

