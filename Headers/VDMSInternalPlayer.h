//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SFSafariViewControllerDelegate-Protocol.h"
#import "VDMSPingClientDelegate-Protocol.h"
#import "VDMSPlayerItemDelegate-Protocol.h"
#import "VDMSStoreDelegate-Protocol.h"
#import "YVChromeDelegate-Protocol.h"

@class NSString, NSTimer, UIImage, UIView, VDMSInternalPlayerExtent, VDMSPlayerStoreData, VDMSStore, YVAnalytics, YVChrome, YVideoPlayerControlOptions, YVideoSession;
@protocol VDMSInternalPlayerDelegate;

@interface VDMSInternalPlayer : NSObject <VDMSStoreDelegate, VDMSPlayerItemDelegate, YVChromeDelegate, VDMSPingClientDelegate, SFSafariViewControllerDelegate>
{
    id <VDMSInternalPlayerDelegate> _delegate;
    UIView *_view;
    long long _playbackState;
    VDMSStore *_store;
    YVideoPlayerControlOptions *_controlOptions;
    YVChrome *_chrome;
    NSTimer *_chromeAutohideTimer;
    NSTimer *_uiUpdateTimer;
    UIImage *_customLogo;
    YVAnalytics *_analytics;
    VDMSInternalPlayerExtent *_playerExtent;
}

+ (float)defaultVolume;
- (void).cxx_destruct;
@property(retain, nonatomic) VDMSInternalPlayerExtent *playerExtent; // @synthesize playerExtent=_playerExtent;
@property(retain, nonatomic) YVAnalytics *analytics; // @synthesize analytics=_analytics;
@property(retain, nonatomic) UIImage *customLogo; // @synthesize customLogo=_customLogo;
@property(retain, nonatomic) NSTimer *uiUpdateTimer; // @synthesize uiUpdateTimer=_uiUpdateTimer;
@property(retain, nonatomic) NSTimer *chromeAutohideTimer; // @synthesize chromeAutohideTimer=_chromeAutohideTimer;
@property(readonly, nonatomic) YVChrome *chrome; // @synthesize chrome=_chrome;
@property(readonly, nonatomic) YVideoPlayerControlOptions *controlOptions; // @synthesize controlOptions=_controlOptions;
@property(retain, nonatomic) VDMSStore *store; // @synthesize store=_store;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
@property(nonatomic) __weak id <VDMSInternalPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)safariViewControllerDidFinish:(id)arg1;
- (void)bottomRightToolbarWidthUpdatedTo:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool chromeDisplayingCaptions;
@property(readonly, nonatomic) _Bool chromeCaptionsAvailable;
@property(readonly, nonatomic) _Bool chromeStoppedAtEnd;
@property(readonly, nonatomic) _Bool chromeWifiRestricted;
- (id)selectedBitrateVariant;
- (void)chromeManualBitrateButtonPressed:(id)arg1;
- (id)customLogoImage;
- (id)chromeAdChoicesImage;
- (void)chromeCenterPlaybackControlState:(long long *)arg1 toolbarPlaybackControlState:(long long *)arg2;
- (_Bool)chromeShouldShowMoreInfoButton;
- (_Bool)chromeShouldShowMuteButton:(_Bool)arg1;
@property(readonly, nonatomic) _Bool chromeSeekable;
@property(readonly, nonatomic) CDStruct_1b6d18a9 chromePlaybackPosition;
@property(readonly, nonatomic) CDStruct_1b6d18a9 chromePlaybackDuration;
- (id)chromeRequestsErrorOverlay;
- (id)chromeRequestsCurrentError;
- (long long)chromeThumbnailImageContentMode;
- (id)chromePostVideoOverlay;
- (double)chromeTopRightContentInsets;
- (double)chromeTopContentInsets;
- (double)chromeTopLeftContentInsets;
- (id)chromeCurrentWindowTransition;
- (_Bool)chromeless;
- (_Bool)chromeControlsVisible;
- (_Bool)chromeIsFullscreenPortrait;
- (_Bool)chromeIsFullscreenLandscape;
- (id)chromeControlOptions;
- (id)chromeContentVideoSession;
- (id)chromeActiveVideoSession;
- (void)chromePopoutPressed;
- (void)chromeSkipBackButtonPressed;
- (void)chromeSkipForwardButtonPressed;
- (void)chromeStopCastingButtonPressed;
- (void)chromeCastingOverlayTapped;
- (void)chromeScrubEnded;
- (void)chromeScrubPositionChanged:(double)arg1;
- (void)chromeScrubStart;
- (void)chromeVoiceOverChromeToggleButtonPressed;
- (void)chromeAdChoiceButtonPressed;
- (void)chromeMoreInfoButtonPressed;
- (void)chromeMuteButtonPressed;
- (void)chromeFullscreenButtonPressed;
- (void)chromeClosedCaptionsButtonPressed:(id)arg1;
- (void)chromeAudioSelectionButtonPressed:(id)arg1;
- (void)chromeFeedbackButtonPressed:(id)arg1;
- (void)chromePauseButtonPressed;
- (void)chromeReplayButtonPressed;
- (void)chromePlayButtonPressed;
- (void)chromeViewCreated:(id)arg1;
- (void)clearChromeAutohideTimer;
- (void)startChromeAutohideTimer;
- (void)setChromeless:(_Bool)arg1;
- (void)handleTap;
- (void)playerItemChanged:(id)arg1 withInfo:(id)arg2;
- (void)remoteAsynchronousRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)mediaItemStoreDataForVideoSession:(id)arg1;
- (id)playerItemForVideoSession:(id)arg1;
- (void)storeTransactionComplete:(id)arg1 originalData:(id)arg2;
- (void)prepareUpcomingItemsWithContext:(id)arg1;
- (id)upcomingAdBreakInCurrentMediaItem;
- (void)resolveAdBreak:(id)arg1;
- (void)setupPlayerItem:(id)arg1;
- (void)selectSourceVariantForPlayerItem:(id)arg1;
- (id)smartDurationForTimelineItem:(id)arg1;
- (id)smartPositionForTimelineItem:(id)arg1 forRawPosition:(double)arg2;
- (id)calculateSeekPositionWithNewData:(id)arg1 context:(id)arg2;
- (id)clampedPositionForTarget:(double)arg1 minPosition:(double)arg2 maxPosition:(id)arg3;
- (void)calculatePositionsForNewStoreData:(id)arg1 playbackPosition:(id *)arg2 displayPosition:(id *)arg3 playbackDuration:(id *)arg4 rawDuration:(id *)arg5 rawPosition:(id *)arg6;
- (void)resolveSourceOfAdBreakItem:(id)arg1 prepareForPlayback:(_Bool)arg2 context:(id)arg3;
- (void)resolveSourceOfMediaItem:(id)arg1 prepareForPlayback:(_Bool)arg2 newData:(id)arg3 context:(id)arg4;
- (_Bool)handleErrorForMediaItemWithUplynkContent:(id)arg1 prepareForPlayback:(_Bool)arg2 newData:(id)arg3 context:(id)arg4;
- (double)backOffTimeIntervalAfterRecoveryAttempt:(unsigned long long)arg1;
- (void)handleErrorForMediaItemWithSourceProvider:(id)arg1 prepareForPlayback:(_Bool)arg2 newData:(id)arg3 context:(id)arg4;
- (_Bool)handleErrorForMediaItem:(id)arg1 prepareForPlayback:(_Bool)arg2 newData:(id)arg3 context:(id)arg4;
- (id)parseAds:(id)arg1;
- (id)parsePreplayResponse:(id)arg1 source:(id *)arg2 adBreaks:(id *)arg3 shouldRetry:(_Bool *)arg4 uplynkContent:(id *)arg5;
- (void)calculateNewCurrentItems:(id)arg1 originalData:(id)arg2 context:(id)arg3;
- (id)calculateCurrentMediaItemWithMediaItems:(id)arg1 transactionStartMediaItems:(id)arg2 transactionStartCurrentMediaItem:(id)arg3 desiredCurrentMediaItem:(id)arg4 transactionStartWantsToPlay:(_Bool)arg5 continuousPlay:(_Bool)arg6 continuousLoop:(_Bool)arg7 transactionStartMediaItemJustReachedEnd:(_Bool)arg8 transactionStartMediaItemAtEnd:(_Bool)arg9 newIntentToPlay:(_Bool)arg10 continueFromItemStart:(_Bool *)arg11 pausePlayer:(_Bool *)arg12;
- (id)calculateMediaItems:(id)arg1 context:(id)arg2;
- (id)createMediaTimelineForMediaItem:(id)arg1;
- (void)storeTransactionBegan;
- (void)pingClient:(id)arg1 didRecieveError:(id)arg2;
- (void)pingClient:(id)arg1 didFetchAds:(id)arg2 extensions:(id)arg3 adsJson:(id)arg4;
- (void)sourceProviderNotImplementedForResourceRequest:(id)arg1;
- (void)resourceRequest:(id)arg1 failedWithError:(id)arg2;
- (void)resourceRequest:(id)arg1 completedWithResource:(id)arg2;
- (void)recoveryContext:(id)arg1 shouldAttemptRecovery:(_Bool)arg2;
- (void)breakNow:(id)arg1;
- (void)internalInsertAdBreakItems:(id)arg1 atIndices:(id)arg2 toAdBreak:(id)arg3;
- (void)insertAdBreakItems:(id)arg1 atIndices:(id)arg2 toAdBreak:(id)arg3;
- (void)appendAdBreakItems:(id)arg1 toAdBreak:(id)arg2;
- (void)setAdBreakIsActive:(_Bool)arg1 forAdBreak:(id)arg2;
- (void)internalAddAdBreaks:(id)arg1 toMediaItem:(id)arg2 context:(id)arg3;
- (void)addAdBreaks:(id)arg1 toMediaItem:(id)arg2;
- (id)adBreakStoreDataFromAdBreak:(id)arg1 context:(id)arg2;
- (id)adBreakItemStoreDataFromAdBreakItem:(id)arg1 inAdBreak:(id)arg2;
- (id)playerItemStoreDataForAdBreakItem:(id)arg1 orMediaItem:(id)arg2;
- (id)uplynkContentDataFromUplynkContent:(id)arg1 contentType:(long long)arg2;
- (void)updateSourceExpirationTime:(id)arg1 forMediaItem:(id)arg2;
- (void)updateSource:(id)arg1 forMediaItem:(id)arg2;
- (void)removeMediaItems:(id)arg1;
- (void)removeAllMediaItems;
- (void)removeMediaItem:(id)arg1;
- (void)internalInsertMediaItems:(id)arg1 atIndices:(id)arg2 context:(id)arg3;
- (void)insertMediaItems:(id)arg1 atIndices:(id)arg2;
- (void)insertMediaItems:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)appendMediaItems:(id)arg1;
- (void)setCustomLogoImage:(id)arg1;
- (void)setCurrentMediaItem:(id)arg1;
- (void)setTargetBitrateWifi:(unsigned long long)arg1;
- (void)setTargetBitrateCellular:(unsigned long long)arg1;
- (void)setContinuousLoop:(_Bool)arg1;
- (void)setContinuousPlay:(_Bool)arg1;
- (void)setVolume:(float)arg1 originator:(long long)arg2;
- (void)mute:(_Bool)arg1 originator:(long long)arg2;
- (double)seekToEndPadding;
- (void)rawSeekToPosition:(double)arg1 originator:(long long)arg2;
- (void)seekToPosition:(double)arg1 originator:(long long)arg2;
- (void)playPause:(_Bool)arg1 originator:(long long)arg2 interactedWithGUI:(_Bool)arg3;
- (void)playPause:(_Bool)arg1 originator:(long long)arg2;
- (id)createPingClientWithZonePrefix:(id)arg1 sessionID:(id)arg2;
- (id)allocMetadata;
- (id)allocVideoSession;
- (id)allocChrome;
- (double)upcomingItemForwardDuration;
@property(readonly, nonatomic) YVideoSession *activeVideoSession;
@property(readonly, nonatomic) VDMSPlayerStoreData *storeData;
- (id)initWithPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

