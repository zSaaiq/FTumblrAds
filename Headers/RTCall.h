//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "RTObject.h"

@class NSDictionary, NSSet, NSString, RTHandle;

@interface RTCall : RTObject
{
    _Bool mIsCancelled;
    _Bool mIsBlockModifiable;
    NSString *mContextID;
    NSString *mHandleID;
    NSString *mUniqueID;
    RTHandle *mHandle;
    NSString *mMethod;
    NSDictionary *mArguments;
    NSSet *mCallbacks;
    CDUnknownBlockType mCancelBlock;
    CDUnknownBlockType mCallbackBlock;
    NSDictionary *mOptions;
}

+ (id)validSyncCallers;
- (void).cxx_destruct;
@property(retain, nonatomic) NSDictionary *options; // @synthesize options=mOptions;
@property(nonatomic) _Bool isBlockModifiable; // @synthesize isBlockModifiable=mIsBlockModifiable;
@property(copy, nonatomic) CDUnknownBlockType cancelBlock; // @synthesize cancelBlock=mCancelBlock;
@property(nonatomic) _Bool isCanceled; // @synthesize isCanceled=mIsCancelled;
@property(retain, nonatomic) NSSet *callbacks; // @synthesize callbacks=mCallbacks;
@property(retain, nonatomic) NSDictionary *arguments; // @synthesize arguments=mArguments;
@property(copy, nonatomic) NSString *method; // @synthesize method=mMethod;
@property(retain, nonatomic) RTHandle *handle; // @synthesize handle=mHandle;
@property(copy, nonatomic) NSString *uniqueID; // @synthesize uniqueID=mUniqueID;
@property(copy, nonatomic) NSString *handleID; // @synthesize handleID=mHandleID;
@property(copy, nonatomic) NSString *contextID; // @synthesize contextID=mContextID;
- (_Bool)endCallWithError:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)endCall;
- (_Bool)invokeCallbackInternal:(id)arg1 args:(id)arg2 cancelOnCallback:(_Bool)arg3 completion:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (_Bool)invokeCallback:(id)arg1 args:(id)arg2 error:(id *)arg3;
@property(copy, nonatomic) CDUnknownBlockType callbackBlock; // @synthesize callbackBlock=mCallbackBlock;
- (id)description;
- (id)initWithID:(id)arg1 contextID:(id)arg2 handleID:(id)arg3 method:(id)arg4 arguments:(id)arg5 callbacks:(id)arg6 options:(id)arg7 callbackBlock:(CDUnknownBlockType)arg8;

@end

