//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CoreData/NSManagedObject.h>

@class NSArray, NSAttributedString, NSDate, NSNumber, NSOrderedSet, NSSet, NSString, TMBlogAvatar, TMBlogRow, TMSubmissionTerms, TMTumblrMarkup, TMUser, _TtC11TumblrTheme7TMTheme;

@interface TMBlog : NSManagedObject
{
    TMTumblrMarkup *_markup;
    NSAttributedString *attributedDescription;
}

+ (id)titleForPushNotificationState:(int)arg1;
+ (int)pushNotificationStateForString:(id)arg1;
+ (id)stringForPushNotificationState:(int)arg1;
+ (id)getBlogUUIDFromName:(id)arg1 context:(id)arg2;
+ (id)getBlogNameFrom:(id)arg1 context:(id)arg2;
+ (id)getBlogUUIDFromName:(id)arg1 coreDataController:(id)arg2;
+ (id)getBlogNameFromUUID:(id)arg1 coreDataController:(id)arg2;
+ (id)generateTemporaryBlogUUID:(id)arg1;
+ (id)getMediaBannerBlog:(id)arg1 context:(id)arg2;
+ (void)deleteAllBlogs:(id)arg1;
+ (id)blogsWithFollowedProperty:(id)arg1;
+ (void)decrementQueueCount:(id)arg1 context:(id)arg2;
+ (void)incrementQueueCount:(id)arg1 context:(id)arg2;
+ (void)decrementDraftsCount:(id)arg1 context:(id)arg2;
+ (void)incrementDraftsCount:(id)arg1 context:(id)arg2;
+ (void)decrementPostCount:(id)arg1 context:(id)arg2;
+ (void)incrementPostCount:(id)arg1 context:(id)arg2;
+ (id)fetchOrCreateBlogWithPartialDictionary:(id)arg1 context:(id)arg2;
+ (id)fetchOrCreateBlogWithDictionary:(id)arg1 context:(id)arg2 partial:(_Bool)arg3 primaryBlogName:(id)arg4 primaryBlogUUID:(id)arg5;
+ (id)fetchOrCreateBlogsWithDictionaries:(id)arg1 context:(id)arg2 partial:(_Bool)arg3 primaryBlogName:(id)arg4 primaryBlogUUID:(id)arg5;
+ (id)fetchOrCreateBlogsWithFullDictionaries:(id)arg1 context:(id)arg2;
+ (id)fetchOrCreateBlogWithFullDictionary:(id)arg1 context:(id)arg2;
+ (id)createBlogWithFullDictionary:(id)arg1 user:(id)arg2 context:(id)arg3;
+ (id)blogsWithUUIDs:(id)arg1 context:(id)arg2;
+ (id)blogWithUUID:(id)arg1 context:(id)arg2;
+ (id)fetchOrCreateUnorderedBlogsWithUUIDs:(id)arg1 context:(id)arg2;
+ (id)fetchOrCreateBlogsWithUUIDs:(id)arg1 context:(id)arg2;
+ (id)fetchOrCreateBlogWithUUID:(id)arg1 context:(id)arg2;
+ (id)blogWithName:(id)arg1 context:(id)arg2;
+ (id)lastBlogPostedToByUser:(id)arg1;
+ (void)unfollowBlog:(id)arg1 updateDashboard:(_Bool)arg2 context:(id)arg3;
+ (void)unfollowBlog:(id)arg1 context:(id)arg2;
+ (void)followBlog:(id)arg1 context:(id)arg2;
+ (_Bool)isFollowingBlog:(id)arg1 context:(id)arg2;
+ (_Bool)canFollowBlogWithName:(id)arg1 context:(id)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSAttributedString *attributedDescription; // @synthesize attributedDescription;
@property(retain, nonatomic) TMTumblrMarkup *markup; // @synthesize markup=_markup;
- (void)updateMarkup;
- (id)blogInfoRepresentation;
@property(readonly, nonatomic) double secondsSinceLastActivity;
- (int)userActiveState;
@property(nonatomic) int pushNotificationState; // @dynamic pushNotificationState;
@property(readonly, nonatomic) _Bool canUserEditReplyRights;
@property(readonly, nonatomic) _Bool canRemove;
@property(readonly, nonatomic, getter=hasAvailableItems) _Bool itemsAvailable;
@property(readonly, nonatomic, getter=hasAvailableMessagingOptions) _Bool messagingOptionsAvailable;
@property(readonly, nonatomic, getter=canBeFollowed) _Bool canFollow;
@property(readonly, nonatomic, getter=isPrivateBlog) _Bool privateBlog;
@property(nonatomic) int blogType;
@property(nonatomic) _Bool asksAllowMedia; // @dynamic asksAllowMedia;
@property(nonatomic, getter=isAnonymousAskingAllowed) _Bool anonymousAskingAllowed; // @dynamic anonymousAskingAllowed;
@property(nonatomic, getter=isFollowing) _Bool following; // @dynamic following;
@property(readonly, nonatomic) _Bool isOwnBlog;
@property(readonly, nonatomic) _Bool isCensored;
@property(nonatomic, getter=isAdult) _Bool adult;
@property(nonatomic, getter=isTopPostsEnabled) _Bool topPostsEnabled; // @dynamic topPostsEnabled;
@property(nonatomic, getter=isAskingAllowed) _Bool askingAllowed; // @dynamic askingAllowed;
@property(nonatomic, getter=isAdmin) _Bool admin; // @dynamic admin;
@property(nonatomic, getter=isSubscribed) _Bool subscribed; // @dynamic subscribed;
@property(readonly, nonatomic, getter=isGroup) _Bool group; // @dynamic group;
- (void)setGroup:(_Bool)arg1;
@property(nonatomic, getter=isPrimary) _Bool primary;
@property(readonly, nonatomic, getter=doesAllowSubmissions) _Bool allowsSubmissions;
@property(retain, nonatomic) NSString *blogDescription; // @dynamic blogDescription;
- (void)updateWithFullResponseDictionary:(id)arg1;
- (void)updateWithPartialResponseDictionary:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSString *URL; // @dynamic URL;
@property(retain, nonatomic) NSString *askPageTitle; // @dynamic askPageTitle;
@property(retain, nonatomic) TMBlogAvatar *avatar; // @dynamic avatar;
@property(nonatomic) _Bool canBlogBeFollowed; // @dynamic canBlogBeFollowed;
@property(nonatomic) _Bool canSubscribe; // @dynamic canSubscribe;
@property(nonatomic) int draftCount; // @dynamic draftCount;
@property(nonatomic) _Bool facebookAutopost; // @dynamic facebookAutopost;
@property(retain, nonatomic) NSString *facebookDisplayName; // @dynamic facebookDisplayName;
@property(nonatomic) _Bool facebookEnabled; // @dynamic facebookEnabled;
@property(nonatomic) int followerCount; // @dynamic followerCount;
@property(retain, nonatomic) NSSet *followers; // @dynamic followers;
@property(nonatomic) _Bool isBlockedByPrimary; // @dynamic isBlockedByPrimary;
@property(nonatomic) int messageCount; // @dynamic messageCount;
@property(nonatomic) _Bool messagingAllowFollowsOnly; // @dynamic messagingAllowFollowsOnly;
@property(nonatomic) _Bool messagingAllowed; // @dynamic messagingAllowed;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) _Bool optOut; // @dynamic optOut;
@property(copy, nonatomic) NSString *placementIdentifier; // @dynamic placementIdentifier;
@property(nonatomic) int postCount; // @dynamic postCount;
@property(retain, nonatomic) NSOrderedSet *posts; // @dynamic posts;
@property(nonatomic) int queueCount; // @dynamic queueCount;
@property(copy, nonatomic) NSNumber *replyRights; // @dynamic replyRights;
@property(retain, nonatomic) TMBlogRow *row; // @dynamic row;
@property(nonatomic) _Bool sharesFollowing; // @dynamic sharesFollowing;
@property(nonatomic) _Bool sharesLikes; // @dynamic sharesLikes;
@property(retain, nonatomic) NSDate *statusExpiration; // @dynamic statusExpiration;
@property(retain, nonatomic) TMSubmissionTerms *submissionTerms; // @dynamic submissionTerms;
@property(copy, nonatomic) _TtC11TumblrTheme7TMTheme *theme; // @dynamic theme;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSArray *topTags; // @dynamic topTags;
@property(nonatomic) _Bool twitterAutopost; // @dynamic twitterAutopost;
@property(retain, nonatomic) NSString *twitterDisplayName; // @dynamic twitterDisplayName;
@property(nonatomic) _Bool twitterEnabled; // @dynamic twitterEnabled;
@property(retain, nonatomic) TMUser *user; // @dynamic user;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

