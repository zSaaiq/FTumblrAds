//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2020 16:17:50).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSURL, NSURLSession;
@protocol OPrivacyAccount, OS_dispatch_queue;

@interface OPrivacyTrapsManager : NSObject
{
    id <OPrivacyAccount> _lastAccount;
    NSURL *_gucBaseUrl;
    NSArray *_consentObservers;
    NSURLSession *_session;
}

+ (id)sharedTrapsManager;
- (void).cxx_destruct;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(retain, nonatomic) NSArray *consentObservers; // @synthesize consentObservers=_consentObservers;
@property(retain, nonatomic) NSURL *gucBaseUrl; // @synthesize gucBaseUrl=_gucBaseUrl;
@property(retain) id <OPrivacyAccount> lastAccount; // @synthesize lastAccount=_lastAccount;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
- (void)notifyConsentObserversWithConsentRecord:(id)arg1;
- (void)removeConsentObserver:(id)arg1;
- (void)addConsentObserver:(id)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (_Bool)shouldUpdateConsentRecordForAccount:(id)arg1;
- (void)dispatchCheckConsentRecordForAccount:(id)arg1;
- (id)consentRecordForAccount:(id)arg1;
- (id)consentRecord;
- (_Bool)cacheConsentRecord:(id)arg1 expiryTime:(id)arg2 recheckTime:(id)arg3 account:(id)arg4;
- (_Bool)isGDPR;
- (void)fetchGDPRJurisdictionForAccount:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)isGDPRForAccount:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)cachedGDPRStatusForAccount:(id)arg1;
- (id)cachedGUCCookieForAccount:(id)arg1 includeExpired:(_Bool)arg2;
- (void)notifyObserversOfChangedCookie:(id)arg1;
- (void)addGUCCookieObserver:(id)arg1;
- (void)cacheGUCCookie:(id)arg1 expirationTime:(id)arg2 account:(id)arg3;
- (void)clearCachedTrapForAccount:(id)arg1;
- (id)cachedTrapURLForAccount:(id)arg1;
- (void)cacheTrapURL:(id)arg1 expirationTime:(id)arg2 account:(id)arg3;
- (void)didDismissTrapForAccount:(id)arg1 queryParams:(id)arg2;
- (void)didShowTrapForAccount:(id)arg1;
- (void)clearTrapForURL:(id)arg1;
- (void)cacheGDPRStatus:(id)arg1 account:(id)arg2;
- (id)checkIsGDPR:(id)arg1;
- (void)forceFetchTrapForAccount:(id)arg1 params:(id)arg2 queue:(id)arg3 mode:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)fetchTrapForAccount:(id)arg1 params:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchTrapWithQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)init;

@end

